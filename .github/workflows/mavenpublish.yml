# This workflow will build a package using `aven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [released]

  workflow_run:
    workflows: [ "Release Workflow" ]
    branches: [ master ]
    types:
      - completed

jobs:
  build-and-publish:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: 18
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Test
        run: mvn clean test

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
  publish-to-maven-central:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with: 
          java-version: 18
          distribution: 'adopt'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Install expect
        run: sudo apt-get install -y expect

      - name: Set Version
        run: mvn versions:set -DnewVersion=${{ github.event.release.tag_name }}
      - name: Publish to Maven Central
        run: |
          echo "testing" 
          
          gpg --list-secret-keys --keyid-format LONG
        
          echo "manual importing..."
          echo "default-key 1DAE66E800EDAE81 >> ~/.gnupg/gpg.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "${{ secrets.GPG_SIGNING_KEY }}" | tee gpgkey.asc
          gpg --batch --import gpgkey.asc
          echo "${{ secrets.GPG_OWNER_TRUST }}" | base64 --decode | gpg --import-ownertrust
        
          gpg --list-secret-keys --keyid-format LONG

          # 这个步骤会将密钥的信任级别设置为 "ultimate"。
          #          expect -c "
          #            spawn gpg --edit-key BAF134248837ACD6F09C31F11DAE66E800EDAE81 trust quit
          #            expect \"Your decision?\"
          #            send \"5\r\"
          #            expect \"Do you really want to set this key to ultimate trust? (y/N)\"
          #            send \"y\r\"
          #            expect eof
          #          "

          mvn -P release --batch-mode deploy -DskipTests -e -X
        env:
          MAVEN_USERNAME: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GPG_TTY: /dev/tty
